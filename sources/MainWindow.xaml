<Window x:Class="RevitDBExplorer.MainWindow"
        x:ClassModifier="internal"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:viewModels="clr-namespace:RevitDBExplorer.ViewModels"
        xmlns:converters="clr-namespace:RevitDBExplorer.WPF.Converters"
        mc:Ignorable="d"
        WindowStartupLocation="CenterOwner"
        Title="Revit database explorer and editor" Height="797" Width="839" Icon="/RevitDBExplorer;component/Resources/RDBE.ico" Closed="Window_Closed" KeyDown="Window_KeyDown">
    <Grid Margin="2">
        <Grid.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="Resources/VectorGraphic.xaml"/>
                </ResourceDictionary.MergedDictionaries>
                <converters:PercentageOfValueConverter x:Key="PercentageOfValueConverter"/>
                <converters:FeetToMetersConverter x:Key="FeetToMetersConverter"/>
                <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
            </ResourceDictionary>
        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="270" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <UniformGrid Grid.ColumnSpan="3" Columns="10" Margin="0 0 0 2">
            <UniformGrid.Resources>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Padding" Value="3"/>
                    <Setter Property="Margin" Value="2 0 2 0"/>
                </Style>
            </UniformGrid.Resources>

            <Button Click="SelectorButton_Click" Tag="CurrentSelection" Margin="0 0 2 0" ToolTip="Snoop already selected elements in Revit; if none selected, snoop all elements from active view">
                <Path Style="{StaticResource IconSelection}"  />
            </Button>
            <Button Click="SelectorButton_Click" Tag="Db" ToolTip="Snoop DB" >
                <Path Style="{StaticResource IconDb}"  />
            </Button>
            <Button Click="SelectorButton_Click" Tag="ActiveView" ToolTip="Snoop active view">
                <Path Style="{StaticResource IconActiveView}" />
            </Button>
            <Button Click="SelectorButton_Click" Tag="ActiveDocument" ToolTip="Snoop active document">
                <Path Style="{StaticResource IconActiveDocument}" />
            </Button>
            <Button Click="SelectorButton_Click" Tag="Application" ToolTip="Snoop application">
                <Path Style="{StaticResource IconApplication}" />
            </Button>
            <Button Click="SelectorButton_Click" Tag="PickFace" ToolTip="Snoop by selecting face in Revit">
                <Path Style="{StaticResource IconPickFace}" />
            </Button>
            <Button Click="SelectorButton_Click" Tag="PickEdge" ToolTip="Snoop by selecting edge in Revit">
                <Path Style="{StaticResource IconPickEdge}"  />
            </Button>
            <Button Click="SelectorButton_Click" Tag="LinkedElement" ToolTip="Snoop by selecting linked element in Revit">
                <Path Style="{StaticResource IconLinkedElement}" />
            </Button>
            <Button Click="SelectorButton_Click" Tag="DependentElements" Margin="2 0 0 0" ToolTip="Snoop dependent elements of already selected elements in Revit">
                <Path Style="{StaticResource IconDependentElements}" />
            </Button>
            <Button Click="SelectorButton_Click" Tag="Schemas" Margin="2 0 0 0" ToolTip="Snoop Extensible Storage framework schemas in memory">
                <Path Style="{StaticResource IconSchemas}" />
            </Button>
            <!--<Button Click="SelectorButton_Click" Tag="Schemas" Margin="2 0 0 0" ToolTip="Snoop Extensible Storage framework schemas in memory">
                <Path Style="{StaticResource IconCategories}" />
            </Button>-->
        </UniformGrid>

        <TreeView Grid.Row="2" Grid.Column="0" ItemsSource="{Binding TreeItems}" Margin="0 0 2 0" SelectedItemChanged="TreeView_SelectedItemChanged" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling">
            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type viewModels:SnoopableCategoryTreeVM}" ItemsSource="{Binding Items}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Name, Mode=OneWay}" />
                        <TextBlock Text=" [" Foreground="Blue" />
                        <TextBlock Text="{Binding Count}" Foreground="Blue" />
                        <TextBlock Text="]" Foreground="Blue" />
                    </StackPanel>
                </HierarchicalDataTemplate>

                <HierarchicalDataTemplate DataType="{x:Type viewModels:SnoopableObjectTreeVM}" ItemsSource="{Binding Items}">
                    <StackPanel Orientation="Horizontal">                       
                        <TextBlock>             
                             <Run Text="{Binding Index, Mode=OneWay}"  x:Name="cIndex">
                                 <Run.Style>
                                     <Style TargetType="{x:Type Run}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsSelected, Mode=TwoWay}"  Value="True">
                                                <Setter Property="Foreground" Value="White"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsSelected, Mode=TwoWay}"  Value="False">
                                                <Setter Property="Foreground" Value="Gray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                     </Style>
                                 </Run.Style>
                              </Run>
                             <Run Text="{Binding Object.Name, Mode=OneWay}" />
                        </TextBlock>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.Resources>

            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                    <Setter Property="IsEnabled" Value="{Binding Path=IsEnabled, Mode=TwoWay}"/>
                    <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}" />
                    <Setter Property="Padding" Value="1 0 1 0"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="#A9274C5E" />
                        </Trigger>
                    </Style.Triggers>
                    <Style.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="2" />
                            <Setter Property="BorderBrush" Value="#99274C5E" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="Padding" Value="2 0 2 0"/>
                        </Style>
                    </Style.Resources>
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>

        <Grid Grid.Row="1" Grid.ColumnSpan="3" Margin="0 3 0 5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <TextBox Grid.Column="0"  Text="{Binding DatabaseQuery, Mode=TwoWay, Delay=1000, UpdateSourceTrigger=PropertyChanged}" Margin="0 0 2 0" ToolTip="{Binding DatabaseQueryToolTip}" ToolTipService.ShowDuration="50000"   >
                <TextBox.Style>
                    <!--source: https://stackoverflow.com/a/33539781/1147478-->
                    <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                        <Style.Resources>
                            <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                <VisualBrush.Visual>
                                    <Label Content="Query Revit database" Foreground="Gray" />
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Style.Resources>
                        <Style.Triggers>
                            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                            </Trigger>
                            <Trigger Property="Text" Value="{x:Null}">
                                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="Background" Value="White" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

            <TextBox Grid.Column="1"  Text="{Binding ListItemsFilterPhrase, Mode=TwoWay, Delay=100, UpdateSourceTrigger=PropertyChanged}" Margin="2 0 0 0"   >
                <TextBox.Style>
                    <!--source: https://stackoverflow.com/a/33539781/1147478-->
                    <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                        <Style.Resources>
                            <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                <VisualBrush.Visual>
                                    <Label Content="Filter list by property/method name" Foreground="Gray" />
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Style.Resources>
                        <Style.Triggers>
                            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                            </Trigger>
                            <Trigger Property="Text" Value="{x:Null}">
                                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="Background" Value="White" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

        </Grid>

        <GridSplitter Grid.Row="2" Grid.Column="1" Background="LightGray"  Width="2" Margin="0 0 2 0" HorizontalAlignment="Left" VerticalAlignment="Stretch"/>

        <ListView Grid.Row="2" Grid.Column="2" ItemsSource="{Binding ListItems}" d:ItemsSource="{d:SampleData ItemCount=5}" SelectionMode="Single" SelectedItem="{Binding ListViewSelectedItem}" MouseLeftButtonUp="ListView_MouseLeftButtonUp" AlternationCount="2" >
            <ListView.Resources>
                <ContextMenu x:Key="ItemContextMenu">
                    <MenuItem Header="Copy" Click="ListViewMenuItemCopy_Click" />
                </ContextMenu>

                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="ToolTip">
                        <Setter.Value>
                            <StackPanel Orientation="Vertical"  MaxWidth="727">
                                <TextBlock >
                                    <Run Foreground="#0000FF" Text="{Binding Documentation.ReturnType, Mode=OneWay}" /> <Run Foreground="#745320" Text="{Binding Documentation.Name, Mode=OneWay}" /><Run Foreground="#21377F" Text="{Binding Documentation.Invocation, Mode=OneWay}" />
                                    <LineBreak/>
                                </TextBlock>

                                <TextBlock TextWrapping="Wrap" Visibility="{Binding Documentation.Summary, Converter={StaticResource StringToVisibilityConverter}}">  
                                    <Run Text="{Binding Documentation.Summary, Mode=OneWay}" Foreground="Black"/><LineBreak/>
                                </TextBlock>
                                <TextBlock TextWrapping="Wrap" Visibility="{Binding Documentation.Returns, Converter={StaticResource StringToVisibilityConverter}}">
                                    <Run Text="Returns:" /><LineBreak/>
                                    <Run Text=" " /><Run Text="{Binding Documentation.Returns, Mode=OneWay}" Foreground="Black" /><LineBreak/>
                                </TextBlock>
                                <TextBlock TextWrapping="Wrap" Visibility="{Binding Documentation.Remarks, Converter={StaticResource StringToVisibilityConverter}}">
                                    <Run Text="Remarks:" /><LineBreak/>
                                    <Run Text=" " /><Run Text="{Binding Documentation.Remarks, Mode=OneWay}" Foreground="Black"/><LineBreak/>
                                </TextBlock>
                                <TextBlock TextWrapping="Wrap">
                                    <Run Text="Accessor:" /><LineBreak/>
                                    <Run Text=" " /><Run Text="{Binding ValueTypeName, Mode=OneWay}"  />
                                </TextBlock>

                            </StackPanel>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ToolTipService.ShowDuration" Value="50000"></Setter>
                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="white"></Setter>
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="#FAFAFA"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.Resources>

            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Name" Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=ActualWidth, Converter={StaticResource PercentageOfValueConverter}, ConverterParameter=37}">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Path x:Name="cMemberIconProperty" Style="{StaticResource IconProperty}" Margin="0 1 4 0" Visibility="Collapsed"/>
                                    <Path x:Name="cMemberIconMethod" Style="{StaticResource IconMethod}" Margin="0 1 4 0" Visibility="Collapsed"/>
                                    <Path x:Name="cMemberIconMethodStatic" Style="{StaticResource IconMethodStatic}" Margin="0 1 4 0" Visibility="Collapsed"/>
                                    <TextBlock x:Name="cTextBlock" Text="{Binding Name}"  />
                                </StackPanel>

                                <DataTemplate.Triggers>

                                    <DataTrigger Binding="{Binding MemberKind}" Value="Method">
                                        <Setter TargetName="cMemberIconMethod" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding MemberKind}" Value="Property">
                                        <Setter TargetName="cMemberIconProperty" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding MemberKind}" Value="StaticMethod">
                                        <Setter TargetName="cMemberIconMethodStatic" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Value" Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=ActualWidth, Converter={StaticResource PercentageOfValueConverter}, ConverterParameter=61}"  >
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock x:Name="cTextBlock" Text="{Binding Value}" TextWrapping="NoWrap" >
                                    <TextBlock.ToolTip>
                                        <TextBlock Text="{Binding ., Converter={StaticResource FeetToMetersConverter}}" />
                                    </TextBlock.ToolTip>
                                </TextBlock>

                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding CanBeSnooped}" Value="True">
                                        <Setter TargetName="cTextBlock" Property="Foreground" Value="#1a0dab"/>
                                        <Setter TargetName="cTextBlock" Property="Cursor" Value="Hand"/>
                                        <Setter TargetName="cTextBlock" Property="FontWeight" Value="Bold"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding HasException}" Value="True">
                                        <Setter TargetName="cTextBlock" Property="Foreground" Value="Red"/>

                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <!--<GridViewColumn Header="Type" Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=ActualWidth, Converter={StaticResource PercentageOfValueConverter}, ConverterParameter=17}" DisplayMemberBinding="{Binding ValueTypeName}" />-->
                </GridView>
            </ListView.View>

            <ListView.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock FontWeight="Bold" FontSize="14" Text="{Binding Name}"/>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Margin" Value="2" />
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </ListView.GroupStyle>
        </ListView>

    </Grid>
</Window>